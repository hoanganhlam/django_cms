{"head":{"title":"Erlang ETS","category":"Elixir","layout":"2017/sheet","weight":-1},"body":[{"title":"Usage","elms":"\n```elixir\niex> table = :ets.new(:my_table, [])\n     8211\n```\n\n```elixir\niex> :ets.insert(table, {:fruit, \"Apple\"})\niex> :ets.lookup(table, :fruit)\n     [{:fruit, \"Apple\"}]\n```\n\n```elixir\niex> :ets.delete(table)\niex> :ets.delete_all_objects(table)\n```\n","h2":"ETS"},{"title":"Flags","elms":"\n```elixir\niex> table = :ets.new(:my_table, [:set, :protected])\n```\n{: .-setup}\n\n| `:set` | no duplicate keys (or: `:ordered_set`, `:bag`, `:duplicate_bag`) |\n| `:protected` | only this process can use it (or: `:public`, `:private`) |\n","h2":"ETS"},{"title":"Ordered sets","elms":"\n```elixir\n:ets.first(table)\n:ets.last(table)\n:ets.next(table, key)\n:ets.prev(table, key)\n```\n","h2":"ETS"},{"title":null,"elms":"{: .-one-column}\n\n* <http://erlang.org/doc/man/ets.html>\n* <http://learnyousomeerlang.com/ets>","h2":"References"}]}