{"head":{"title":"Vue.js","category":"JavaScript","layout":"2017/sheet","updated":"2019-12-26T00:00:00.000Z","weight":-10,"intro":"[Vue.js](https://vuejs.org/) is an open-source Model–view–viewmodel JavaScript framework for building user interfaces and single-page applications.\n"},"body":[{"title":"Expressions","elms":"\n```html\n<div id=\"app\">\n  <p>I have a {{ product }}</p>\n  <p>{{ product + 's' }}</p>\n  <p>{{ isWorking ? 'YES' : 'NO' }}</p>\n  <p>{{ product.getSalePrice() }}</p>\n</div>\n```\n\nSee: [Delimiters](https://vuejs.org/v2/api/#delimiters)\n","h2":null},{"title":"Binding","elms":"\n```html\n<a v-bind:href=\"url\">...</a>\n```\n\n#### Shorthand syntax\n```html\n<a :href=\"url\">...</a>\n```\n{: data-line=\"1\"}\n\n#### True or false will add or remove attribute\n```html\n<button :disabled=\"isButtonDisabled\">...\n```\n\n#### If isActive is truthy, the class ‘active’ will appear\n```html\n<div :class=\"{ active: isActive }\">...\n```\n\n#### Style color set to value of activeColor\n```html\n<div :style=\"{ color: activeColor }\">\n```\n\nSee: [v-bind](https://vuejs.org/v2/api/#v-bind)\n","h2":null},{"title":"Directives","elms":"\n#### Element inserted/removed based on truthiness\n```html\n<p v-if=\"inStock\">{{ product }}</p>\n```\n```html\n<p v-else-if=\"onSale\">...</p>\n<p v-else>...</p>\n```\n\n#### Toggles the display: none CSS property\n```html\n<p v-show=\"showProductDetails\">...</p>\n```\n\n#### Two-way data binding\n```html\n<input v-model=\"firstName\" >\n```\n\n| Method | Description |\n| --- | --- |\n| `v-model.lazy=\"...\"` | Syncs input after change event |\n| `v-model.number=\"...\"` | Always returns a number |\n| `v-model.trim=\"...\"` | Strips whitespace |\n\nSee: [Directives](https://vuejs.org/v2/api/#Directives)\n","h2":null},{"title":"Actions/Events","elms":"\n#### Calls addToCart method on component\n```html\n<button v-on:click=\"addToCart\">...\n```\n\n#### Shorthand syntax\n```html\n<button @click=\"addToCart\">...\n```\n{: data-line=\"1\"}\n\n#### Arguments can be passed\n```html\n<button @click=\"addToCart(product)\">...\n```\n\n#### To prevent default behavior (e.g. page reload)\n```html\n<form @submit.prevent=\"addProduct\">...\n```\n\n#### Only trigger once\n```html\n<img @mouseover.once=\"showImage\">...\n```\n\n| Method | Description |\n| --- | --- |\n| `.stop` | Stop all event propagation |\n| `.self ` | Only trigger if event.target is element itself |\n\n#### Keyboard entry example\n```html\n<input @keyup.enter=\"submit\">\n```\n\n#### Call onCopy when control-c is pressed\n```html\n<input @keyup.ctrl.c=\"onCopy\">\n```\n\nSee: [Events](https://vuejs.org/v2/guide/events.html)\n","h2":null},{"title":"List rendering","elms":"\n#### The `:key` is always recommended\n```html\n<li v-for=\"item in items\"\n    :key=\"item.id\">\n  {{ item }}\n</li>\n```\n{: data-line=\"2\"}\n\n#### To access the position in the array\n```html\n<li v-for=\"(item, index) in items\">...\n```\n\n#### To iterate through objects\n```html\n<li v-for=\"(value, key) in object\">...\n```\n\n#### Using `v-for` with a component\n```html\n<cart-product v-for=\"item in products\"\n              :product=\"item\"\n              :key=\"item.id\">\n```\n\nSee: [List Rendering](https://vuejs.org/v2/guide/list.html)\n\n\nComponent\n--------\n","h2":null},{"title":"Component anatomy","elms":"\n```js\nVue.component('my-component', {\n  components: {\n    // Components that can be used in the template\n    ProductComponent,\n    ReviewComponent\n  },\n  props: {\n    // The parameters the component accepts\n    message: String,\n    product: Object,\n    email: {\n      type: String,\n      required: true,\n      default: \"none\"\n      validator: function (value) {\n        // Should return true if value is valid\n      }\n    }\n  },\n  data: function() {\n    // `data` must be a function\n    return {\n      firstName: 'Vue',\n      lastName: 'Mastery'\n    }\n  },\n  computed: {\n    // Return cached values until dependencies change\n    fullName: function () {\n      return this.firstName + ' ' + this.lastName\n    }\n  },\n  watch: {\n    // Called when firstName changes value\n    firstName: function (value, oldValue) { ... }\n  },\n  methods: { ... },\n  template: '<span>{{ message }}</span>',\n  // Can also use backticks in `template` for multi-line\n})\n```\n{: data-line=\"3, 8, 16, 21, 28, 34, 39\"}\n\nSee: [Components Basics](https://vuejs.org/v2/guide/components.html)\n","h2":null},{"title":"Lifecycle hooks","elms":"\n| Method | Description |\n| --- | --- |\n| `beforeCreate` | After the instance has been initialized [#](https://vuejs.org/v2/api/#beforeCreate) |\n| `created` | After the instance is created [#](https://vuejs.org/v2/api/#created) |\n| `beforeMount` | Before the first render [#](https://vuejs.org/v2/api/#beforeMount) |\n| `mounted` | After the instance has been mounted [#](https://vuejs.org/v2/api/#mounted) |\n| `beforeUpdate` | When data changes, before the DOM is patched [#](https://vuejs.org/v2/api/#beforeUpdate) |\n| `updated` | After a data change [#](https://vuejs.org/v2/api/#updated) |\n| `beforeDestroy` | Before the instance is destroyed [#](https://vuejs.org/v2/api/#beforeDestroy) |\n| `destroyed` | After a Vue instance has been destroyed [#](https://vuejs.org/v2/api/#destroyed) |\n\nSee: [Lifecycle Hooks](https://vuejs.org/v2/api/#Options-Lifecycle-Hooks)\n","h2":null},{"title":"Custom events","elms":"\n#### Set listener on component, within its parent\n```html\n<button-counter v-on:incrementBy=\"incWithVal\">\n```\n\n#### Inside parent component\n```js\nmethods: {\n  incWithVal: function (toAdd) { ... }\n}\n```\n\n#### Inside button-counter template\n```js\nthis.$emit(\n    'incrementBy', // Custom event name\n    5 // Data sent up to parent\n  )\n```\n\nUse props to pass data into child components,\ncustom events to pass data to parent elements.\n\nSee: [Custom Events](https://vuejs.org/v2/guide/components-custom-events.html)\n\nSingle file components\n--------\n","h2":null},{"title":"Single file","elms":"```html\n<template>\n  <p>{{ greeting }} World!</p>\n</template>\n\n<script>\nmodule.exports = {\n  data: function () {\n    return {\n      greeting: 'Hello'\n    }\n  }\n}\n</script>\n\n<style scoped>\np {\n  font-size: 2em;\n  text-align: center;\n}\n</style>\n```\n\nSee: [Single File Components](https://vuejs.org/v2/guide/single-file-components.html)\n","h2":null},{"title":"Separation","elms":"```html\n<template>\n  <div>This will be pre-compiled</div>\n</template>\n<script src=\"./my-component.js\"></script>\n<style src=\"./my-component.css\"></style>\n```\n\nSee: [What About Separation of Concerns?](https://vuejs.org/v2/guide/single-file-components.html#What-About-Separation-of-Concerns)\n\nSlots\n--------\n","h2":null},{"title":"Using a single slot","elms":"\n#### Component template\n```html\n<div>\n  <h2>I'm a title</h2>\n  <slot>\n    Only displayed if no slot content\n  </slot>\n</div>\n```\n{: data-line=\"3,4,5\"}\n\n#### Use of component with data for slot\n```html\n<my-component>\n  <p>This will go in the slot</p>\n</my-component>\n```\n{: data-line=\"2\"}\n\nSee: [Slots](https://vuejs.org/v2/guide/components-slots.html)\n","h2":null},{"title":"Multiple slots","elms":"\n#### Component template\n```html\n<div class=\"container\">\n  <header>\n    <slot name=\"header\"></slot>\n  </header>\n  <main>\n    <slot>Default content</slot>\n  </main>\n  <footer>\n    <slot name=\"footer\"></slot>\n  </footer>\n</div>\n```\n{: data-line=\"3,6,9\"}\n\n#### Use of component with data for slots\n```html\n<app-layout>\n  <h1 slot=\"header\">Page title</h1>\n  <p>the main content.</p>\n  <p slot=\"footer\">Contact info</p>\n</app-layout>\n```\n{: data-line=\"2,3,4\"}\n\nSee: [Slots](https://vuejs.org/v2/guide/components-slots.html)\n\nAlso see\n--------\n\n* [Vue CLI](https://cli.vuejs.org/) _(cli.vuejs.org)_\n* [Vue Router](https://router.vuejs.org/) _(router.vuejs.org)_\n* [Vue DevTools](https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd?hl=en) _(chrome.google.com)_\n* [Nuxt.js](https://nuxtjs.org/) _(nuxtjs.org)_\n* [Vue.js v1.0.28 cheatsheet](vue@1.0.28/) _Legacy version_\n\n{%endraw%}","h2":null}]}