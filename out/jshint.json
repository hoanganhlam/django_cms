{"head":{"title":"Jshint","category":"JavaScript libraries","layout":"2017/sheet","updated":"2017-09-12T00:00:00.000Z"},"body":[{"title":"Relaxing","elms":"\nEnable these options to *not* throw errors in these conditions.\nSee: [Relaxing](http://www.jshint.com/docs/options/#relaxing-options)\n{: .-setup}\n\n```js\n/* jshint asi: true */\nallow()\nmissing_semicolons()\n```\n\n```js\n/* jshint boss: true */\nif (m = str.match(/.../))\n```\n\n```js\n/* jshint debug: true */\ndebugger;\n```\n\n```js\n/* jshint eqnull: true */\nif (x == null)\n```\n\n```js\n/* jshint evil: true */\neval('...')\n```\n\n```js\n/* jshint expr: true */\nproduction && minify = true;\ndiv.innerWidth;\nexpect(x).be.true;\n```\n\n```js\n/* jshint laxcomma: true */\nvar one = 1\n  , two = 2;\n```\n\n```js\n/* jshint loopfunc: true */\nfor (i=0; i<10; x++) {\n  (function(i) { ... })(i);\n}\n```\n\n```js\n/* jshint sub: true */\nprocess.env['name_here']\n```\n\n```js\n/* jshint strict: \"global\" */\n\"use strict\";\n```\n","h2":null},{"title":"Enforcing","elms":"\nEnable these options to catch more errors.\nSee: [Enforcing](http://www.jshint.com/docs/options/#enforcing-options)\n{: .-setup}\n\n```js\n/* jshint curly: true */\nwhile (day)                     // err: use { }'s\n  shuffle();\n```\n\n```js\n/* jshint eqeqeq: true */\nif (a == null)                  // err: use ===\n```\n\n```js\n/* jshint es3: true */\n// ...for legacy IE compatibility\na.default = function() { ... }; // err: reserved word\narray = [ 1, 2, 3, ];           // err: extra comma\n```\n\n```js\n/* jshint forin: true */\nfor (key in obj) { ... }        // err: check obj.hasOwnProperty(key)\n```\n\n```js\n/* jshint freeze: true */\nArray.prototype.count = ...;    // err: don't modify native prototypes\n```\n\n```js\n/* jshint indent: 4 */\nif (x) {                        // err: expected indent of 4, found 2\n  ...;\n}\n```\n\n```js\n/* jshint quotmark: single */\n/* jshint quotmark: double */\nalert(\"hi\");                    // err: only single allowed\n```\n\n```js\n/* jshint strict: true */\nfunction() { ... }              // err: need \"use strict\"\n```\n\n```js\n/* jshint white: true, indent: 4 */\n/* jshint maxdepth: 2 */\n/* jshint maxparams: 3 */\n/* jshint maxstatements: 4 */\n/* jshint maxcomplexity: 5 */\n/* jshint maxlen: 80 */\n```\n","h2":null},{"title":"Ignore","elms":"\n```js\n/* jshint ignore:start */\n/* jshint ignore:end */\n```\n","h2":null},{"title":"Globals and Environments","elms":"\n```js\n/* jshint undef: true */\n/* global jQuery */\n/* global -BAD_LIB */\n```\n\n```js\n/* jshint devel: true */   console, alert, ...\n/* jshint browser: true */ window, document, location, ...\n/* jshint node: true */    module, exports, console, process, ...\n/* jshint jquery: true */  jQuery, $\n```\n\nSee: [Environments](http://www.jshint.com/docs/options/#environments)\n","h2":null},{"title":"Also see","elms":"\n* <http://www.jshint.com/docs/options/>\n* <https://gist.github.com/haschek/2595796>","h2":null}]}