{"head":{"title":"Makefile","prism_languages":["makefile"],"layout":"2017/sheet","category":"CLI"},"body":[{"title":null,"elms":"\n```makefile\nfoo  = \"bar\"\nbar  = $(foo) foo  # dynamic (renewing) assignment\nfoo := \"boo\"       # one time assignment, $(bar) now is \"boo foo\"\nfoo ?= /usr/local  # safe assignment, $(foo) and $(bar) still the same\nbar += world       # append, \"boo foo world\"\nfoo != echo fooo   # exec shell command and assign to foo\n# $(bar) now is \"fooo foo world\"\n```\n\n`=` expressions are only evaluated when they're being used.\n","h2":"Var assignment"},{"title":null,"elms":"\n```makefile\nout.o: src.c src.h\n  $@   # \"out.o\" (target)\n  $<   # \"src.c\" (first prerequisite)\n  $^   # \"src.c src.h\" (all prerequisites)\n\n%.o: %.c\n  $*   # the 'stem' with which an implicit rule matches (\"foo\" in \"foo.c\")\n\nalso:\n  $+   # prerequisites (all, with duplication)\n  $?   # prerequisites (new ones)\n  $|   # prerequisites (order-only?)\n\n  $(@D) # target directory\n```\n","h2":"Magic variables"},{"title":null,"elms":"\n| Prefix | Description                                 |\n| ------ | ------------------------------------------- |\n| `-`    | Ignore errors                               |\n| `@`    | Don't print command                         |\n| `+`    | Run even if Make is in 'don't execute' mode |\n\n```makefile\nbuild:\n    @echo \"compiling\"\n    -gcc $< $@\n\n-include .depend\n```\n","h2":"Command prefixes"},{"title":null,"elms":"\n```makefile\njs_files  := $(wildcard test/*.js)\nall_files := $(shell find images -name \"*\")\n```\n","h2":"Find files"},{"title":null,"elms":"\n```makefile\nfile     = $(SOURCE:.cpp=.o)   # foo.cpp => foo.o\noutputs  = $(files:src/%.coffee=lib/%.js)\n\noutputs  = $(patsubst %.c, %.o, $(wildcard *.c))\nassets   = $(patsubst images/%, assets/%, $(wildcard images/*))\n```\n","h2":"Substitutions"},{"title":null,"elms":"\n```makefile\n$(strip $(string_var))\n\n$(filter %.less, $(files))\n$(filter-out %.less, $(files))\n```\n","h2":"More functions"},{"title":null,"elms":"\n```makefile\n%.o: %.c\n  ffmpeg -i $< > $@   # Input and output\n  foo $^\n```\n","h2":"Building files"},{"title":null,"elms":"\n```makefile\n-include foo.make\n```\n","h2":"Includes"},{"title":null,"elms":"\n```sh\nmake\n  -e, --environment-overrides\n  -B, --always-make\n  -s, --silent\n  -j, --jobs=N   # parallel processing\n```\n","h2":"Options"},{"title":null,"elms":"\n```makefile\nfoo: $(objects)\nifeq ($(CC),gcc)\n  $(CC) -o foo $(objects) $(libs_for_gcc)\nelse\n  $(CC) -o foo $(objects) $(normal_libs)\nendif\n```\n","h2":"Conditionals"},{"title":null,"elms":"\n```makefile\ndeploy:\n  $(MAKE) deploy2\n```\n","h2":"Recursive"},{"title":null,"elms":"\n- [isaacs's Makefile](https://gist.github.com/isaacs/62a2d1825d04437c6f08)\n- [Your Makefiles are wrong](https://tech.davis-hansson.com/p/make/)\n- [Manual](https://www.gnu.org/software/make/manual/html_node/index.html)","h2":"Further reading"}]}