{"head":{"title":"Capybara","category":"Ruby libraries","layout":"2017/sheet","weight":-5,"updated":"2020-06-13T00:00:00.000Z","tags":["Featurable"]},"body":[{"title":"Navigating","elms":"\n    visit articles_path\n","h2":null},{"title":"Clicking links and buttons","elms":"\n```ruby\nclick_on 'Link Text'\nclick_button\nclick_link\n```\n","h2":null},{"title":"Interacting with forms","elms":"\n```ruby\nattach_file 'Image', '/path/to/image.jpg'\nfill_in 'First Name', with: 'John'\n```\n\n```ruby\ncheck 'A checkbox'\nuncheck 'A checkbox'\n```\n\n```ruby\nchoose 'A radio button'\n```\n\n```ruby\nselect 'Option', from: 'Select box'\nunselect\n```\n","h2":null},{"title":"Limiting","elms":"\n```ruby\nwithin '.classname' do\n  click '...'\nend\n```\n\n```ruby\nwithin_fieldset :id do\n  ...\nend\n```\n","h2":null},{"title":"Predicates","elms":"\n```ruby\npage.has_css?('.button')\nexpect(page).to have_css('.button')\npage.should have_css('.button')\n```\n{: .-setup}\n\n| Positive                          | Negative               |\n| ---                               | ---                    |\n| `has_content?`                    | `has_no_content?`      |\n| ---                               | ---                    |\n| `has_css?` _(selector)_           | `has_no_css?`          |\n| ---                               | ---                    |\n| `has_xpath?` _(path)_             | `has_no_xpath?`        |\n| ---                               | ---                    |\n| `has_link?` _(selector)_          | `has_no_link?`         |\n| ---                               | ---                    |\n| `has_button?` _(selector)_        | `has_no_button?`       |\n| ---                               | ---                    |\n| `has_field?` _(selector)_         | `has_no_field?`        |\n| ---                               | ---                    |\n| `has_checked_field?` _(selector)_ | `has_unchecked_field?` |\n| ---                               | ---                    |\n| `has_table?` _(selector)_         | `has_no_table?`        |\n| ---                               | ---                    |\n| `has_select?` _(selector)_        | `has_no_select?`       |\n{: .-headers.-left-align}\n\nIn Rspec, these also map to matchers like `page.should have_content`.\n","h2":"Querying"},{"title":"Selectors","elms":"\n```ruby\nexpect(page).to have_button('Save')\n```\n\n```ruby\nexpect(page).to have_button('#submit')\n```\n\n```ruby\nexpect(page).to have_button('//[@id=\"submit\"]')\n```\n\nThe `selector` arguments can be text, CSS selector, or XPath expression.\n","h2":"Querying"},{"title":"RSpec assertions","elms":"\n```ruby\npage.has_button?('Save')\n```\n\n```ruby\nexpect(page).to have_no_button('Save')\n```\n\nIn RSpec, you can use `page.should` assertions.\n","h2":"Querying"},{"title":"About negatives","elms":"\n```ruby\nexpect(page).to have_no_button('Save')   # OK\n```\n```ruby\nexpect(page).not_to have_button('Save')  # Bad\n```\n\nUse `should have_no_*` versions with RSpec matchers because\n`should_not have_*` doesn't wait for a timeout from the driver.\n","h2":"Querying"},{"title":"Matchers","elms":"\n```ruby\nexpect(page).to \\\n```\n{: .-setup}\n\n```ruby\n  have_selector '.blank-state'\n  have_selector 'h1#hola', text: 'Welcome'\n  have_button 'Save'\n  have_checked_field '#field'\n  have_unchecked_field\n  have_css '.class'\n  have_field '#field'\n  have_table '#table'\n  have_xpath '//div'\n```\n\n```ruby\n  have_link 'Logout', href: logout_path\n```\n\n```ruby\n  have_select 'Language',\n    selected: 'German'\n    options: ['Engish', 'German']\n    with_options: ['Engish', 'German'] # partial match\n```\n\n```ruby\n  have_text 'Hello',\n    type: :visible # or :all\n    # alias: have_content\n```\n","h2":"RSpec"},{"title":"Common options","elms":"\nAll matchers have these options:\n{: .-setup}\n\n```ruby\n  text: 'welcome'\n  text: /Hello/\n  visible: true\n  count: 4\n  between: 2..5\n  minimum: 2\n  maximum: 5\n  wait: 10\n```\n","h2":"RSpec"},{"title":"Finding","elms":"\n```ruby\nfind(selector)\nfind_button(selector)\nfind_by_id(id)\nfind_field(selector)\nfind_link(selector)\nlocate\n```\n","h2":"Other features"},{"title":"Scoping","elms":"\n```ruby\nwithin '#delivery' do\n  fill_in 'Street', with: 'Hello'\nend\n```\n\n```ruby\nwithin :xpath, '//article'\nwithin_fieldset\nwithin_table\nwithin_frame\nscope_to\n```\n\n```ruby\nfind('#x').fill_in('Street', with: 'Hello')\n# same as within\n```\n","h2":"Other features"},{"title":"Scripting","elms":"\n```ruby\nexecute_script('$(\"input\").trigger(\"change\")')\nevaluate_script('window.ga')\n```\n\nExecutes JavaScript.\n","h2":"Other features"},{"title":"Debugging","elms":"\n```ruby\nsave_and_open_page\n```\n\nOpens the webpage in your browser.\n","h2":"Other features"},{"title":"Page","elms":"\n```ruby\npage\n  .all('h3')\n  .body\n  .html\n  .source\n  .current_host\n  .current_path\n  .current_url\n```\n","h2":"Other features"},{"title":"AJAX","elms":"\n```ruby\nusing_wait_time 10 do\n  ...\nend\n```\n","h2":"Other features"},{"title":"Misc","elms":"\n    drag\n    field_labeled\n","h2":"Other features"},{"title":"Page object","elms":"\n```ruby\npage.status_code == 200\npage.response_headers\n```\n\nSee: <http://www.rubydoc.info/github/jnicklas/capybara/master/Capybara/Session>\n","h2":"Other features"},{"title":"Poltergeist","elms":"\n```ruby\nCapybara.register_driver :poltergeist do |app|\n  Capybara::Poltergeist::Driver.new(app, :inspector => true)\nend\nCapybara.javascript_driver = :poltergeist\n```\n\nUse [poltergeist](https://github.com/teampoltergeist/poltergeist) to integrate PhantomJS.\n","h2":"Other features"},{"title":"Blacklist","elms":"\n```ruby\nconfig.before :each, :js do\n  page.driver.browser.url_blacklist = [\n    'fonts.googleapis.com',\n    'use.typekit.net',\n    'f.vimeocdn.com',\n    'player.vimeo.com',\n    'www.googletagmanager.com'\n  ].flat_map { |domain| [ \"http://#{domain}\", \"https://#{domain}\" ] }\nend\n```\n","h2":"Other features"},{"title":"Debugging","elms":"\nEnable `inspector: true` and then:\n{: .-setup}\n\n```ruby\npage.driver.debug\n```\n\nTo pause execution for a while:\n\n```ruby\npage.driver.pause\n```\n","h2":"Other features"},{"title":"Accepting confirm() and alert()","elms":"\n```ruby\naccept_alert { ... }\ndismiss_confirm { ... }\naccept_prompt(with: 'hi') { ... }\n```\n\nAlternatively:\n\n```ruby\npage.driver.browser.switch_to.alert.accept\n```\n","h2":"Selenium"},{"title":"Updating session","elms":"\n```ruby\npage.set_rack_session(foo: 'bar')\n```\n","h2":"Selenium"},{"title":null,"elms":"{: .-one-column}\n\n- <http://rubydoc.info/github/jnicklas/capybara/Capybara/RSpecMatchers>\n- <http://www.rubydoc.info/github/jnicklas/capybara/master/Capybara/Node/Matchers>","h2":"See also"}]}