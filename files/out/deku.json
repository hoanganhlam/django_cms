{"head":{"title":"Deku v2","category":"JavaScript libraries","layout":"2017/sheet","intro":"Quick reference for [Deku](https://www.npmjs.com/package/deku), a minimal virtual DOM library.\n"},"body":[{"title":"Components","elms":"\n```js\n/** @jsx element */\nimport { element } from 'cs/deku'\n\nfunction render ({ props, children, context, path }) {\n  // props    = properties object\n  // children = children array\n  // path     = path to current component (like 0.1.5.2)\n  // context  = common properties in all components\n  return (\n    <div class='App' hidden={props.hidden} color={context.theme.color}>\n      {children}\n    </div>\n  }\n}\n\nfunction onCreate ({ props, dispatch, path }) { ... }\nfunction onUpdate ({ props, dispatch, path }) { ... }\nfunction onRemove ({ props, dispatch, path }) { ... }\n// actually { children, props, path, context }\n\nexport default { render, onCreate, onRemove }\n```\n","h2":null},{"title":"Rendering","elms":"\n```js\nimport { createStore } from 'redux'\nimport { dom, element } from 'deku'\n\n// Create a Redux store to handle all UI actions and side-effects\nlet store = createStore(reducer)\n\n// Create a renderer that can turn vnodes into real DOM elements\nlet render = createRenderer(document.body, store.dispatch)\n\n// Update the page and add redux state to the context\nrender(<MyButton>Hello World!</MyButton>, store.getState())\n```","h2":null}]}