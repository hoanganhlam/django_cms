{"head":{"title":"Sinon","category":"JavaScript libraries","layout":"2017/sheet","weight":-1,"updated":"2017-10-27T00:00:00.000Z"},"body":[{"title":"Creating spies","elms":"\n```js\nfn = sinon.spy()\nfn()\n```\n\n```js\nfn.calledOnce == true\nfn.callCount == 1\n```\n","h2":null},{"title":"Spying/stubbing","elms":"\n```js\nsinon.spy($, 'ajax')\n```\n\n```js\n$.ajax();\n$.ajax.calledOnce == true\n```\n\n```js\nsinon.stub($, 'ajax', function () { ... }) // function optional\n```\n\n```js\n$.ajax.calledWithMatch({ url: '/x' })\n$.ajax.restore()\n```\n","h2":null},{"title":"Spy/stub properties","elms":"\n```js\nspy\n  .args        //=> [ [..], [..] ] one per call\n  .thisValues\n  .returnValues\n```\n\n```js\n  .called      //=> true\n  .notCalled\n  .callCount\n  .calledOnce\n  .calledTwice\n  .calledThrice\n```\n\n```js\n  .getCalls()   //=> Array\n  .getCall(0)\n  .firstCall\n```\n","h2":null},{"title":"Anonymous stub","elms":"\n```js\nstub = sinon.stub().returns(42)\nstub() == 42\n```\n\n```js\nstub\n  .withArgs(42).returns(1)\n  .withArgs(43).throws(\"TypeError\")\n```\n\n```js\nstub\n  .returns(1)\n  .throws(\"TypeError\")\n  .returnsArg(0) // Return 1st argument\n  .callsArg(0)\n```\n","h2":null},{"title":"Fake date","elms":"\n```js\nsinon.useFakeTimers(+new Date(2011,9,1));\n```\n","h2":null},{"title":"Fake server","elms":"\n```js\nserver = sinon.fakeServer.create()\n```\n\n```js\n$.get('/file.json', ...)\nserver.requests[0].respond(\n  200,\n  { 'Content-Type': 'application/json' },\n  JSON.stringify({ hello: 'world' })\n)\n```\n\n```js\nserver.restore()\n```\n","h2":null},{"title":"Fake XHR","elms":"\n```js\nxhr = sinon.useFakeXMLHttpRequest()\nxhr.restore()\n```\n","h2":null},{"title":"Sandbox","elms":"\n```js\nbeforeEach(function() {\n  global.sinon = require('cs/sinon').sandbox.create()\n})\n```\n\n```js\nafterEach(function() {\n  global.sinon.restore()\n})\n```","h2":null}]}