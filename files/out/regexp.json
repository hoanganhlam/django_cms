{"head":{"title":"regexp","category":"Others","layout":"2017/sheet","weight":-1,"authors":[{"github":"rizqyhi"},{"github":"izzergh"},{"github":"kolapsys"},{"github":"samtrion"}],"updated":"2020-03-10T00:00:00.000Z","description":"Basic cheatsheets for regular expression\n"},"body":[{"title":null,"elms":"{: .-three-column}\n","h2":"RegExp"},{"title":"Character classes","elms":"\n| Pattern       | Description                              |\n| ------------- | ---------------------------------------- |\n| `.`           | Any character, except newline            |\n| `\\w`          | Word                                     |\n| `\\d`          | Digit                                    |\n| `\\s`          | Whitespace                               |\n| `\\W`          | Not word                                 |\n| `\\D`          | Not digit                                |\n| `\\S`          | Not whitespace                           |\n| `[abc]`       | Any of a, b, or c                        |\n| `[a-e]`       | Characters between `a` and `e`           |\n| `[1-9]`       | Digit between `1` and `9`                |\n| `[[:print:]]` | Any printable character including spaces |\n| `[^abc]`      | Any character except `a`, `b` or `c`     |\n","h2":"RegExp"},{"title":"Anchors","elms":"\n| Pattern | Description             |\n| ------- | ----------------------- |\n| `\\G`    | Start of match          |\n| `^`     | Start of string         |\n| `$`     | End of string           |\n| `\\A`    | Start of string         |\n| `\\Z`    | End of string           |\n| `\\z`    | Absolute end of string  |\n| `\\b`    | A word boundry          |\n| `\\B`    | Non-word boundry        |\n| `^abc`  | Start with `abc`        |\n| `abc$`  | End with `abc`          |\n","h2":"RegExp"},{"title":"Escaped characters","elms":"\n| Pattern    | Description                            |\n| ---------- | -------------------------------------- |\n| `\\. \\* \\\\` | Escape special character used by regex |\n| `\\t`       | Tab                                    |\n| `\\n`       | Newline                                |\n| `\\r`       | Carriage return                        |\n","h2":"RegExp"},{"title":"Groups","elms":"\n| Pattern   | Description                    |\n| --------- | ------------------------------ |\n| `(abc)`   | Capture group                  |\n| `(a|b)`   | Match `a` or `b`               |\n| `(?:abc)` | Match `abc`, but don't capture |\n\n","h2":"RegExp"},{"title":"Quantifiers","elms":"\n| Pattern  | Description           |\n| -------- | --------------------- |\n| `a*`     | Match 0 or more       |\n| `a+`     | Match 1 or more       |\n| `a?`     | Match 0 or 1          |\n| `a{5}`   | Match exactly 5       |\n| `a{,3}`  | Match up to 3         |\n| `a{3,}`  | Match 3 or more       |\n| `a{1,3}` | Match between 1 and 3 |\n","h2":"RegExp"},{"title":"Lookahead & Lookbehind","elms":"\n| Pattern      | Description                               |\n| ---          | ---                                       |\n| `a(?=b)`     | Match `a` in `baby` but not in `bay`      |\n| `a(?!b)`     | Match `a` in `Stan` but not in `Stab`     |\n| ---          | ---                                       |\n| `(?<=a)b`    | Match `b` in `crabs` but not in `cribs`   |\n| `(?<!a)b`    | Match `b` in `fib` but not in `fab`       |","h2":"RegExp"}]}