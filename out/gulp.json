{"head":{"title":"Gulp","category":"JavaScript libraries"},"body":[{"title":"Example","elms":"\n\n    // gulpfile.js\n    // Load plugins\n    var gulp = require('gulp'),\n        sass = require('gulp-ruby-sass'),\n        autoprefixer = require('gulp-autoprefixer'),\n        minifycss = require('gulp-minify-css'),\n        jshint = require('gulp-jshint'),\n        uglify = require('gulp-uglify'),\n        imagemin = require('gulp-imagemin'),\n        rename = require('gulp-rename'),\n        clean = require('gulp-clean'),\n        concat = require('gulp-concat'),\n        notify = require('gulp-notify'),\n        cache = require('gulp-cache'),\n        livereload = require('gulp-livereload'),\n        lr = require('tiny-lr'),\n        server = lr();\n\n    // Styles\n    gulp.task('styles', function() {\n      return gulp.src('src/styles/main.scss')\n        .pipe(sass({ style: 'expanded', }))\n        .pipe(autoprefixer('last 2 version', 'safari 5', 'ie 8', 'ie 9', 'opera 12.1', 'ios 6', 'android 4'))\n        .pipe(gulp.dest('dist/styles'))\n        .pipe(rename({ suffix: '.min' }))\n        .pipe(minifycss())\n        .pipe(livereload(server))\n        .pipe(gulp.dest('dist/styles'))\n        .pipe(notify({ message: 'Styles task complete' }));\n    });\n\n    // Scripts\n    gulp.task('scripts', function() {\n      return gulp.src('src/scripts/**/*.js')\n        .pipe(jshint('.jshintrc'))\n        .pipe(jshint.reporter('default'))\n        .pipe(concat('main.js'))\n        .pipe(gulp.dest('dist/scripts'))\n        .pipe(rename({ suffix: '.min' }))\n        .pipe(uglify())\n        .pipe(livereload(server))\n        .pipe(gulp.dest('dist/scripts'))\n        .pipe(notify({ message: 'Scripts task complete' }));\n    });\n\n    // Images\n    gulp.task('images', function() {\n      return gulp.src('src/images/**/*')\n        .pipe(cache(imagemin({ optimizationLevel: 3, progressive: true, interlaced: true })))\n        .pipe(livereload(server))\n        .pipe(gulp.dest('dist/images'))\n        .pipe(notify({ message: 'Images task complete' }));\n    });\n\n    // Clean\n    gulp.task('clean', function() {\n      return gulp.src(['dist/styles', 'dist/scripts', 'dist/images'], {read: false})\n        .pipe(clean());\n    });\n\n    // Default task\n    gulp.task('default', ['clean'], function() {\n        gulp.start('styles', 'scripts', 'images');\n    });\n\n    // Watch\n    gulp.task('watch', function() {\n\n      // Listen on port 35729\n      server.listen(35729, function (err) {\n        if (err) {\n          return console.log(err)\n        };\n\n        // Watch .scss files\n        gulp.watch('src/styles/**/*.scss', ['styles']);\n\n        // Watch .js files\n        gulp.watch('src/scripts/**/*.js', ['scripts']);\n\n        // Watch image files\n        gulp.watch('src/images/**/*', ['images']);\n\n      });\n\n    });\n","h2":null},{"title":"References","elms":"\nhttps://github.com/gulpjs/gulp/blob/master/docs/getting-started.md#getting-started\n","h2":null},{"title":"Livereload","elms":"\n    var lr = require('tiny-lr')();\n\n    function notify (lr, root) {\n      return function (event) {\n        var fname = require('path').relative(root, event.path);\n        lr.changed({ body: { files: [ fname ] }});\n      };\n    }\n\n    gulp.task('livereload', function () {\n      lr.listen(35729)\n      gulp.watch('public/**/*', notify(lr, __dirname+'/public'));\n    });\n\n    // Express\n    app.use(require('connect-livereload')())\n    <!-- livereload --><script>document.write('<script src=\"'+(location.protocol||'http:')+'//'+(location.hostname||'localhost')+':35729/livereload.js?snipver=1\"><\\/scr'+'ipt>')</script>","h2":null}]}