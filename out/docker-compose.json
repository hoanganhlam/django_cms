{"head":{"title":"docker-compose","category":"Devops","layout":"2017/sheet","prism_languages":["yaml"],"weight":-1,"updated":"2020-01-01T00:00:00.000Z"},"body":[{"title":"Basic example","elms":"\n```yaml\n# docker-compose.yml\nversion: '2'\n\nservices:\n  web:\n    build: \"\"\n    # build from Dockerfile\n    context: ./Path\n    dockerfile: Dockerfile\n    ports:\n     - \"5000:5000\"\n    volumes:\n     - .:/code\n  redis:\n    image: redis\n```\n","h2":null},{"title":"Commands","elms":"\n```sh\ndocker-compose start\ndocker-compose stop\n```\n\n```sh\ndocker-compose pause\ndocker-compose unpause\n```\n\n```sh\ndocker-compose ps\ndocker-compose up\ndocker-compose down\n```\n","h2":null},{"title":null,"elms":"{: .-three-column}\n","h2":"Reference"},{"title":"Building","elms":"\n```yaml\nweb:\n  # build from Dockerfile\n  build: .\n  args:     # Add build arguments\n    APP_HOME: app\n```\n\n```yaml\n  # build from custom Dockerfile\n  build:\n    context: ./dir\n    dockerfile: Dockerfile.dev\n```\n\n```yaml\n  # build from image\n  image: ubuntu\n  image: ubuntu:14.04\n  image: tutum/influxdb\n  image: example-registry:4000/postgresql\n  image: a4bc65fd\n```\n","h2":"Reference"},{"title":"Ports","elms":"\n```yaml\n  ports:\n    - \"3000\"\n    - \"8000:80\"  # host:container\n```\n\n```yaml\n  # expose ports to linked services (not to host)\n  expose: [\"3000\"]\n```\n","h2":"Reference"},{"title":"Commands","elms":"\n```yaml\n  # command to execute\n  command: bundle exec thin -p 3000\n  command: [bundle, exec, thin, -p, 3000]\n```\n\n```yaml\n  # override the entrypoint\n  entrypoint: /app/start.sh\n  entrypoint: [php, -d, vendor/bin/phpunit]\n```\n","h2":"Reference"},{"title":"Environment variables","elms":"\n```yaml\n  # environment vars\n  environment:\n    RACK_ENV: development\n  environment:\n    - RACK_ENV=development\n```\n\n```yaml\n  # environment vars from file\n  env_file: .env\n  env_file: [.env, .development.env]\n```\n","h2":"Reference"},{"title":"Dependencies","elms":"\n```yaml\n  # makes the `db` service available as the hostname `database`\n  # (implies depends_on)\n  links:\n    - db:database\n    - redis\n```\n\n```yaml\n  # make sure `db` is alive before starting\n  depends_on:\n    - db\n```\n","h2":"Reference"},{"title":"Other options","elms":"\n```yaml\n  # make this service extend another\n  extends:\n    file: common.yml  # optional\n    service: webapp\n```\n\n```yaml\n  volumes:\n    - /var/lib/mysql\n    - ./_data:/var/lib/mysql\n```\n","h2":"Reference"},{"title":null,"elms":"{: .-three-column}\n","h2":"Advanced features"},{"title":"Labels","elms":"\n```yaml\nservices:\n  web:\n    labels:\n      com.example.description: \"Accounting web app\"\n```\n","h2":"Advanced features"},{"title":"DNS servers","elms":"\n```yaml\nservices:\n  web:\n    dns: 8.8.8.8\n    dns:\n      - 8.8.8.8\n      - 8.8.4.4\n```\n","h2":"Advanced features"},{"title":"Devices","elms":"\n```yaml\nservices:\n  web:\n    devices:\n    - \"/dev/ttyUSB0:/dev/ttyUSB0\"\n```\n","h2":"Advanced features"},{"title":"External links","elms":"\n```yaml\nservices:\n  web:\n    external_links:\n      - redis_1\n      - project_db_1:mysql\n```\n","h2":"Advanced features"},{"title":"Hosts","elms":"\n```yaml\nservices:\n  web:\n    extra_hosts:\n      - \"somehost:192.168.1.100\"\n```\n","h2":"Advanced features"},{"title":"Network","elms":"\n```yaml\n# creates a custom network called `frontend`\nnetworks:\n  frontend:\n```\n","h2":"Advanced features"},{"title":"External network","elms":"\n```yaml\n# join a pre-existing network\nnetworks:\n  default:\n    external:\n      name: frontend\n```\n","h2":"Advanced features"},{"title":"Volume","elms":"\n```yaml\n# Mount host paths or named volumes, specified as sub-options to a service\n  db:\n    image: postgres:latest\n    volumes:\n      - \"/var/run/postgres/postgres.sock:/var/run/postgres/postgres.sock\"\n      - \"dbdata:/var/lib/postgresql/data\"\n\nvolumes:\n  dbdata:\n```","h2":"Advanced features"}]}