{"head":{"title":"Webpack","category":"JavaScript libraries","layout":"2017/sheet","updated":"2017-09-26T00:00:00.000Z","intro":"This is a very basic \"getting started with Webpack\" guide for use with [Webpack](https://webpack.js.org) v3. This doesn't cover all features, but it should get you started in understanding the config file format.\n"},"body":[{"title":"Basic config","elms":"\n#### webpack.config.js\n\n```js\nmodule.exports = {\n  context: __dirname,\n  entry: 'src/app.js',\n  output: {\n    path: __dirname + '/public',\n    filename: 'app.js'\n  }\n}\n```\n\n#### Terminal\n\n```bash\nnpm install --save-dev webpack\n```\n\n| `webpack` | build\n| `webpack -- -p` | build production\n| `webpack -- --watch` | compile continuously\n\nThis compiles `src/app.js` into `public/app.js`. (Note: you may need to use `./node_modules/.bin/webpack` as a command if you're not invoking Webpack via npm scripts.)\n","h2":null},{"title":"Multiple files","elms":"\n#### webpack.config.js\n\n```js\nmodule.exports = {\n  entry: {\n    app: 'src/app.js',\n    vendor: 'src/vendor.js'\n  },\n  output: {\n    path: __dirname + '/public',\n    filename: '[name].js'\n  }\n}\n```\n{: data-line=\"2,3,4,8\"}\n\nThis creates `app.js` and `vendor.js`.\n","h2":null},{"title":"Babel","elms":"\n#### Terminal\n\n```bash\nnpm install --save-dev \\\n  babel-loader \\\n  babel-preset-env \\\n  babel-preset-react\n```\n\n#### webpack.config.js\n\n```js\nmodule.exports = {\n  ···\n  module: {\n    rules: [\n      { test: /\\.js$/,\n        exclude: /node_modules/,\n        use: [\n          { loader: 'babel-loader' }\n        ]\n      }\n    ]\n  }\n}\n```\n{: data-line=\"3,4,5,6,7,8\"}\n\n#### .babelrc\n\n```js\n{\n  \"presets\": [ \"env\", \"react\" ]\n}\n```\n\nAdds support for [Babel](http://babeljs.io).\n","h2":"Loaders"},{"title":"CSS","elms":"\n#### Terminal\n\n```bash\nnpm install --save-dev \\\n  css-loader \\\n  style-loader\n```\n\n#### webpack.config.js\n\n```js\nmodule.exports = {\n  ···\n  module: {\n    rules: [\n     { test: /\\.css$/,\n       exclude: /node_modules/,\n       use: [\n         { loader: 'style-loader' },\n         { loader: 'css-loader' }\n       ]\n      }\n    ]\n  }\n}\n```\n{: data-line=\"3,4,5,6,7,8,9\"}\n\n#### Your JavaScript\n\n```js\nimport './styles.css'\n// or:\nrequire('./styles.css')\n```\n\nThis allows you to use CSS inside your JavaScript. This packages your CSS inside your JavaScript bundle.\n","h2":"Loaders"},{"title":"PostCSS","elms":"\n#### Terminal\n\n```\nnpm install --save-dev \\\n  postcss-loader \\\n  postcss-cssnext\n```\n\n#### webpack.config.js\n\n```js\n···\n// Inside module.rules[]:\n{ test: /\\.css$/,\n  exclude: /node_modules/,\n  use: [\n    { loader: 'style-loader' },\n    { loader: 'css-loader' },\n    { loader: 'postcss-loader' }\n···\n```\n{: data-line=\"8\"}\n\n#### postcss.config.js\n\n```js\nmodule.exports = {\n  plugins: [\n    require('postcss-cssnext')()\n  ]\n}\n```\n{: data-line=\"3\"}\n\nThis example adds [postcss-cssnext](https://www.npmjs.com/package/postcss-cssnext) support to your CSS files.\n","h2":"Loaders"},{"title":"Dev server","elms":"\n#### package.json\n\n```json\n{ ···\n  \"scripts\": {\n    \"dev\": \"webpack-dev-server\"\n  }\n}\n```\n{: data-line=\"3\"}\n\n#### Terminal\n\n```bash\nnpm install --save-dev \\\n  webpack-dev-server\n```\n\n```bash\nnpm run dev\n```\n\nThis starts an HTTP server for development (port 8080 by default).","h2":"Other features"}]}