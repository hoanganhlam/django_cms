{"head":{"title":"Git branches","category":"Git","layout":"2017/sheet","updated":"2020-02-13T00:00:00.000Z"},"body":[{"title":null,"elms":"{: .-three-column}\n","h2":"Working with branches"},{"title":"Creating","elms":"\n```bash\ngit checkout -b $branchname\ngit push origin $branchname --set-upstream\n```\n\nCreates a new branch locally then pushes it.\n","h2":"Working with branches"},{"title":"Getting from remote","elms":"\n```bash\ngit fetch origin\ngit checkout --track origin/$branchname\n```\n\nGets a branch in a remote.\n","h2":"Working with branches"},{"title":"Delete local remote-tracking branches","elms":"\n```bash\ngit remote prune origin\n```\n\nDeletes `origin/*` branches in your local copy. Doesn't affect the remote.\n","h2":"Working with branches"},{"title":"List existing branches","elms":"\n```bash\ngit branch --list\n```\n\nExisting branches are listed. Current branch will be highlighted with an asterisk.\n","h2":"Working with branches"},{"title":"List merged branches","elms":"\n```bash\ngit branch -a --merged\n```\n\nList outdated branches that have been merged into the current one.\n","h2":"Working with branches"},{"title":"Delete a local branch","elms":"\n```bash\ngit branch -d $branchname\n```\n\nDeletes the branch only if the changes have been pushed and merged with remote.\n","h2":"Working with branches"},{"title":"Delete branch forcefully","elms":"\n```bash\ngit branch -D $branchname\n```\n\n```bash\ngit branch -d $branchname\n```\n\n> Note: You can also use the -D flag which is synonymous with --delete --force instead of -d. This will delete the branch regardless of its merge status.\n> Delete a branch irrespective of its merged status.\n","h2":"Working with branches"},{"title":"Delete remote branch","elms":"\n```bash\ngit push origin --delete :$branchname\n```\n\nWorks for tags, too!\n","h2":"Working with branches"},{"title":"Get current sha1","elms":"\n```bash\ngit show-ref HEAD -s\n```","h2":"Working with branches"},{"title":"Reset branch and remove all changes","elms":"\n```bash\ngit reset --hard\n```\n","h2":"Working with branches"},{"title":"Undo commits to a specific commit","elms":"\n```bash\ngit reset --hard $commit_id\n\n# Now push safely to your branch\ngit push --force-with-lease\n\n# Or push brutally to your branch\ngit push --force\n```","h2":"Working with branches"}]}