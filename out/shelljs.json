{"head":{"title":"Shell.js","category":"JavaScript libraries","layout":"2017/sheet","updated":"2017-10-27T00:00:00.000Z","weight":-1,"intro":"[ShellJS](https://github.com/shelljs/shelljs) is a portable (Windows/Linux/OS X) implementation of Unix shell commands on top of the Node.js API. \n"},"body":[{"title":"Example","elms":"\n```js\nvar shell = require('cs/shelljs')\n```\n\n```js\nif (!shell.which('git')) {\n  shell.echo('Sorry, this script requires git')\n  shell.exit(1)\n}\n```\n\n```js\n// Copy files to release dir\nshell.rm('-rf', 'out/Release')\nshell.cp('-R', 'stuff/', 'out/Release')\n```\n\n```js\n// Replace macros in each .js file\nshell.cd('lib')\nshell.ls('*.js').forEach(function (file) {\n  shell.sed('-i', 'BUILD_VERSION', 'v0.1.2', file)\n  shell.sed('-i', /^.*REMOVE_THIS_LINE.*$/, '', file)\n  shell.sed('-i', /.*REPLACE_LINE_WITH_MACRO.*\\n/, shell.cat('macro.js'), file)\n})\nshell.cd('..')\n```\n\n```js\n// Run external tool synchronously\nif (shell.exec('git commit -am \"Auto-commit\"').code !== 0) {\n  shell.echo('Error: Git commit failed')\n  shell.exit(1)\n}\n```\n\nTaken from the [Readme](https://github.com/shelljs/shelljs).\n","h2":null},{"title":"Require","elms":"\n```js\nconst sh = require('shelljs')\n```\n","h2":null},{"title":"Paths","elms":"\n```js\nsh.cd('dir')\n```\n\n```js\nsh.mkdir('dir')\nsh.mkdir('-p', 'dir')\n```\n","h2":null},{"title":"File manipulation","elms":"\n```js\nsh.cp('src', 'dest')\nsh.cp('-rf', 'src', 'dest')\n```\n\n```js\nsh.rm('file')\nsh.rm('-rf', 'file')\n```\n\n```js\nsh.mv('src', 'dest')\nsh.mv(['src1','src2'], 'dest')\n```\n\n```js\nsh.chmod('644', 'file')\nsh.chmod(755, 'file')\nsh.chmod('u+x', 'file')\n```\n","h2":null},{"title":"Tests","elms":"\n```js\nsh.test('-b', 'path')  // block device\nsh.test('-d', 'path')  // dir\nsh.test('-e', 'path')  // exists\nsh.test('-f', 'path')  // file\nsh.test('-L', 'path')  // symlink\n```\n","h2":null},{"title":"Cat and output","elms":"\n```js\nsrc = sh.cat('file*.txt')\n```\n\n```js\n'hello'.to('output.txt')\n'hello'.toEnd('append.txt')\n```\n\n```js\nsh.cat('input.txt').to('output.txt')\n```\n","h2":null},{"title":"Utils","elms":"\n```js\nsh.which('x')\nsh.pwd()\n```\n\n```js\nsh.echo('hi')\n```\n\n```js\nsh.exec('node --version').code\nsh.exec('node --version').output\nsh.exec('node --version', { silent: true }).output\n```\n\n```js\nsh.exec('node --version', (code, output) => {\n  sh.echo(`exit code ${code}`)\n})\n```\n\n```js\nsh.tempdir()\n```\n\n```js\nsh.error()  // null if no error\n```\n","h2":null},{"title":null,"elms":"\n* <https://github.com/shelljs/shelljs>","h2":"Also see"}]}