{"head":{"title":"ActiveAdmin","category":"Ruby","layout":"2017/sheet"},"body":[{"title":"Listing scopes","elms":"\nAllows you to filter listings by a certain scope.\n{: .-setup}\n\n```ruby\nscope :draft\nscope :for_approval\n```\n\n```ruby\nscope :public, if: ->{ current_admin_user.can?(...) }\nscope \"Unapproved\", :pending\nscope(\"Published\") { |books| books.where(:published: true) }\n```\n","h2":null},{"title":"Sidebar filters","elms":"\n```ruby\nfilter :email\nfilter :username\n```\n","h2":null},{"title":"Custom actions","elms":"\nYou can define custom actions for models.\n{: .-setup}\n\n```ruby\nbefore_filter only: [:show, :edit, :publish] do\n  @post = Post.find(params[:id])\nend\n```\n\n#### Make the route\n\n```ruby\nmember_action :publish, method: :put do\n  @post.publish!\n  redirect_to admin_posts_path, notice: \"The post '#{@post}' has been published!\"\nend\n```\n\n#### Link it in the index\n\n```ruby\nindex do\n  column do |post|\n    link_to 'Publish', publish_admin_post_path(post), method: :put\n  end\nend\n```\n\n#### And link it in show/edit\n\n```ruby\naction_item only: [:edit, :show] do\n  @post = Post.find(params[:id])\n  link_to 'Publish', publish_admin_post_path(post), method: :put\nend\n```\n","h2":null},{"title":"Columns","elms":"\n```ruby\ncolumn :foo\n```\n\n```ruby\ncolumn :title, sortable: :name do |post|\n  strong post.title\nend\n```\n","h2":null},{"title":"Other helpers","elms":"\n```ruby\nstatus_tag \"Done\"           # Gray\nstatus_tag \"Finished\", :ok  # Green\nstatus_tag \"You\", :warn     # Orange\nstatus_tag \"Failed\", :error # Red\n```\n","h2":null},{"title":"Disabling 'new post'","elms":"\n```ruby\nActiveAdmin.register Post do\n  actions :index, :edit\n  # or: config.clear_action_items!\nend\n```","h2":null}]}