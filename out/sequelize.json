{"head":{"title":"Sequelize","category":"Ruby libraries"},"body":[{"title":"API","elms":"\n    sequelize.sync().done -> ...\n","h2":null},{"title":"Models","elms":"\n    Project = sequelize.define('Project', {\n      title: Sequelize.STRING,\n      description: Sequelize.TEXT,\n      myDate: { type: Sequelize.DATE, defaultValue: Sequelize.NOW },\n      title: { type: Sequelize.STRING, allowNull: false },\n      id: { type: Sequelize.INTEGER, autoIncrement: true, primaryKey: true },\n    }, {\n      classMethods: { ... },\n      instanceMethods: { ... }\n    });\n\n    Project.hasMany(Task)\n","h2":null},{"title":"Finders","elms":"\n    Project.find(123).success (project) ->\n\n    Project.find({ where: {title: 'Hello'} })\n    Project.find({ where: {id: [1,3,4]} })\n    Project.find({ where: [\"id > ?\", 25] })\n\n    Project.find(\n      where: {title: 'a'}\n      attributes: ['id', ['name', 'title']]\n    )\n\n    .findOrCreate(...)\n\n    .findAll\n    .findAll({ where: ... })\n    .findAll({ order: 'title DESC' })\n    .findAll({ limit: 10 })\n    .findAll({ offset: 10, limit: 2 })\n\n    .count()\n\n","h2":null},{"title":"Build","elms":"\n    item = Project.build({ ... })\n\n    item.title = '...'\n\n    item.save().success (item) ->\n\n    item.updateAttributes({ title: '...' })\n\n    item.destroy().success ->\n\n    item.values\n","h2":null}]}