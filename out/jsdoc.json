{"head":{"title":"Jsdoc","category":"JavaScript","layout":"2017/sheet","updated":"2020-06-23T00:00:00.000Z","weight":-1},"body":[{"title":"Functions","elms":"\n```js\n/**\n * This is a function.\n *\n * @param {string} n - A string param\n * @return {string} A good string\n *\n * @example\n *\n *     foo('hello')\n */\n\nfunction foo(n) {\n  return n\n}\n```\n\nSee: <https://jsdoc.app/index.html>\n","h2":null},{"title":"Types","elms":"\n| Type                            | Description                           |\n| ------------------------------- | ------------------------------------- |\n| `@param {string=} n`            | Optional                              |\n| `@param {string} [n]`           | Optional                              |\n| `@param {(string|number)} n`    | Multiple types                        |\n| `@param {*} n`                  | Any type                              |\n| `@param {...string} n`          | Repeatable arguments                  |\n| `@param {string} [n=\"hi\"]`      | Optional with default                 |\n| `@param {string[]} n`           | Array of strings                      |\n| `@return {Promise<string[]>} n` | Promise fulfilled by array of strings |\n\nSee: <https://jsdoc.app/tags-type.html>\n","h2":null},{"title":"Variables","elms":"\n```js\n/**\n * @type {number}\n */\nvar FOO = 1\n```\n\n```js\n/**\n * @const {number}\n */\nconst FOO = 1\n```\n","h2":null},{"title":"Typedef","elms":"\n```js\n/**\n * A song\n * @typedef {Object} Song\n * @property {string} title - The title\n * @property {string} artist - The artist\n * @property {number} year - The year\n */\n```\n\n```js\n/**\n * Plays a song\n * @param {Song} song - The {@link Song} to be played\n */\n\nfunction play(song) {}\n```\n\nSee: <https://jsdoc.app/tags-typedef.html>\n","h2":null},{"title":"Typedef Shorthand","elms":"\n{% raw %}\n\n```js\n/**\n * A song\n * @typedef {{title: string, artist: string, year: number}} Song\n */\n```\n\n{% endraw %}\n\n```js\n/**\n * Plays a song\n * @param {Song} song - The {@link Song} to be played\n */\n\nfunction play(song) {}\n```\n\nSee: <https://jsdoc.app/tags-typedef.html>\n","h2":null},{"title":"Importing types","elms":"\n```js\n/**\n * @typedef {import('./Foo').default} Bar\n */\n\n/**\n * @param {Bar} x\n */\n\nfunction test(x) {}\n```\n\nThis syntax is [TypeScript-specific](https://github.com/Microsoft/TypeScript/wiki/JsDoc-support-in-JavaScript#import-types).\n","h2":null},{"title":"Other keywords","elms":"\n```js\n/**\n * @throws {FooException}\n * @private\n * @deprecated\n * @see\n *\n * @function\n * @class\n */\n```\n\nSee the full list: <https://jsdoc.app/index.html#block-tags>\n","h2":null},{"title":"Renaming","elms":"\n```js\n/*\n * @alias Foo.bar\n * @name Foo.bar\n */\n```\n\nPrefer `alias` over `name`. See: <https://jsdoc.app/tags-alias.html>","h2":null}]}