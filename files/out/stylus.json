{"head":{"title":"Stylus","category":"CSS","layout":"2017/sheet","prism_languages":["stylus"],"weight":-3,"updated":"2017-10-30T00:00:00.000Z","tags":["Featurable"]},"body":[{"title":"CSS syntax","elms":"\n```stylus\n.box {\n  color: blue;\n\n  .button {\n    color: red;\n  }\n}\n```\n\nStylus is a CSS pre-processor.\n\nSee: [stylus-lang.com](http://stylus-lang.com/)\n","h2":null},{"title":"Indent syntax","elms":"\n```stylus\n.box\n  color: blue\n\n  .button\n    color: red\n```\n\nAlso works! The colon is optional, as well. This is typically the syntax used with Stylus documents.\n","h2":null},{"title":"Mixins","elms":"\n```stylus\ncaps-type()\n  text-transform: uppercase\n  letter-spacing: 0.05em\n```\n{: data-line=\"1\"}\n\n```stylus\nh5\n  caps-type()\n```\n{: data-line=\"2\"}\n\nSee [Mixins](#mixins-1) below.\n","h2":null},{"title":"Variables","elms":"\n```stylus\nroyal-blue = #36a\n```\n{: data-line=\"1\"}\n\n```stylus\ndiv\n  color: royal-blue\n```\n\nMixins\n------\n{: .-three-column}\n","h2":null},{"title":"Without arguments","elms":"\n```stylus\nred-border()\n  border: solid 2px red\n```\n{: data-line=\"1\"}\n\n```stylus\ndiv\n  red-border()\n```\n{: data-line=\"2\"}\n\nSee: [Mixins](http://stylus-lang.com/docs/mixins.html)\n","h2":null},{"title":"With arguments","elms":"\n```stylus\nborder-radius(n)\n  -webkit-border-radius: n\n  border-radius: n\n```\n{: data-line=\"1\"}\n\n```stylus\ndiv\n  border-radius: 2px\n  border-radius(2px)\n```\n{: data-line=\"2,3\"}\n\nMixins can be applied in two different ways.\n","h2":null},{"title":"Argument defaults","elms":"\n```stylus\nborder-radius(n = 2px)\n  -webkit-border-radius: n\n```\n{: data-line=\"1\"}\n","h2":null},{"title":"Block mixins","elms":"\n```stylus\nmobile()\n  @media (max-width: 480px)\n    {block}\n```\n{: data-line=\"3\"}\n\n```stylus\n+mobile()\n  width: 10px\n```\n{: data-line=\"1\"}\n\nSee: [Block mixins](http://stylus-lang.com/docs/mixins.html#block-mixins)\n","h2":null},{"title":"Rest params","elms":"\n```stylus\nshadow(offset-x, args...)\n  box-shadow: offset-x args\n  margin-top: offset-x\n```\n{: data-line=\"1\"}\n\n```stylus\n#login\n  shadow: 1px 2px 5px #eee\n```\n\nSee: [Rest params](http://stylus-lang.com/docs/vargs.html)\n\nFunctions\n---------\n{: .-three-column}\n","h2":null},{"title":"Functions","elms":"\n```stylus\nadd(a, b)\n  a + b\n```\n{: data-line=\"1\"}\n\n```stylus\nbody\n  padding: add(10px, 5)\n```\n{: data-line=\"2\"}\n\nSee: [Functions](http://stylus-lang.com/docs/functions.html)\n","h2":null},{"title":"Argument defaults","elms":"\n```stylus\nadd(a, b = 2)\n  a + b\n```\n{: data-line=\"1\"}\n\nSee: [Argument defaults](http://stylus-lang.com/docs/functions.html#argument-defaults)\n","h2":null},{"title":"Named parameters","elms":"\n```stylus\nshadow(x, y)\n  x y (y * 1.5) #000\n```\n\n```stylus\n.button\n  box-shadow: shadow(x: 2, y: 4)\n```\n{: data-line=\"2\"}\n\nSee: [Named parameters](http://stylus-lang.com/docs/functions.html#named-parameters)\n","h2":null},{"title":"Multiple return values","elms":"\n```stylus\nsizes()\n  8px 16px\n```\n{: data-line=\"2\"}\n\n```stylus\nsizes()[0]  // → 8px\nsizes()[1]  // → 16px\n```\n\nSee: [Multiple return values](http://stylus-lang.com/docs/functions.html#multiple-return-values)\n\nValues\n------\n{: .-three-column}\n","h2":null},{"title":"Conditional assignment","elms":"\n```stylus\nroyal-blue = #36a\nroyal-blue ?= #89f\n```\n{: data-line=\"2\"}\n\n```stylus\ndiv\n  color: royal-blue  // #36a\n```\n\n`?=` will only set a variable if it's previously unset.\n\nSee: [Conditional assignment](https://stylus-lang.com/docs/operators.html#conditional-assignment--)\n","h2":null},{"title":"Property lookup","elms":"\n```stylus\n.logo\n  width: w = 150\n  margin-left: -(w / 2)\n  // or\n  height: 80px\n  margin-top: -(@height / 2)\n```\n{: data-line=\"2,3\"}\n\nSee: [Property lookup](https://stylus-lang.com/docs/variables.html#property-lookup)\n","h2":null},{"title":"Interpolation","elms":"\n```stylus\n-{prefix}-border-radius: 2px\n```\n\nSee: [Interpolation](https://stylus-lang.com/docs/interpolation.html)\n","h2":null},{"title":"Color operators","elms":"\n```stylus\n#888 + 50%    // → #c3c3c3 (lighten)\n#888 - 50%    // → #444 (darken)\n#f00 + 50deg  // → #ffd500 (hue)\n```\n","h2":null},{"title":"Casting","elms":"\n```stylus\nn = 5px\n```\n\n```stylus\nfoo: (n)em\nfoo: (n * 5)%\n```\n{: data-line=\"1,2\"}\n","h2":null},{"title":"Lookup","elms":"\n```stylus\nlight-blue = #3bd\nname = 'blue'\nlookup('light-' + name)\n```\n{: data-line=\"3\"}\n\nSee: [lookup](https://stylus-lang.com/docs/bifs.html#lookupname)\n\nAdvanced features\n-----------------\n{: .-three-column}\n","h2":null},{"title":"Conditional","elms":"\n```stylus\nif color == blue\n  display: block\nelse if true and true\n  display: inline\nelse if 'hey' is not 'bye'\n  display: flex\nelse\n  display: none\n```\n\nAliases:\n\n\n| `==` | `is` |\n| `!=` | `is not` |\n| `!=` | `isnt` |\n\nSee: [Conditionals](https://stylus-lang.com/docs/functions.html#conditionals)\n","h2":null},{"title":"For loops","elms":"\n```stylus\nfont-size-1 = 10px\nfont-size-2 = 20px\nfont-size-3 = 30px\n\nfor i in 1..3\n  .text-{i}\n    font-size: lookup('font-size-' + i)\n```\n{: data-line=\"5\"}\n","h2":null},{"title":"Definition check","elms":"\n```stylus\nif ohnoes is defined\n  color: blue\n```\n{: data-line=\"1\"}\n\nSee: [is defined](https://stylus-lang.com/docs/operators.html#variable-definition-is-defined)\n","h2":null},{"title":"False values","elms":"\n```stylus\n0\nnull\nfalse\n''\n```\n","h2":null},{"title":"Type check","elms":"\n```stylus\nif val is a 'string'\nif val is a 'ident'\nif #fff is a 'rgba'    // → true\n```\n\nSee: [Instance check](https://stylus-lang.com/docs/operators.html#instance-check-is-a)\n\nBuilt-in functions\n------------------\n{: .-three-column}\n","h2":null},{"title":"Color functions","elms":"\n```stylus\nalpha(#fff)   //→ 1\nalpha(rgba(0, 0, 0, 0.2))   //→ 0.2\n```\n\n```stylus\ndark(black)  //→ true\nlight(black) //→ false\n```\n\n```stylus\nhue(#0a0)         //→ 50deg\nsaturation(#f00)  //→ 100%\nlightness(#f00)   //→ 50%\nluminosity(#f00)  //→ 0.2126\n```\n\n```stylus\nhue(#0a0, 0deg)\nsaturation(#f00, 50%)\nlightness(#f00)\n```\n\n```stylus\nlighten(color, 10%)\ndarken(color, 10%)\nsaturate(color, 10%)\ndesaturate(color, 10%)\ninvert(color)\n```\n\n```stylus\ntint(color, 50%)  // mix with white\nshade(color, 50%) // mix with black\n```\n\n```stylus\nunquote(string)\n```\n\nSee: [Built-in functions](http://stylus-lang.com/docs/bifs.html)\n","h2":null},{"title":"Image size","elms":"\n```stylus\nwidth:  image-size('tux.png')[0]\nheight: image-size('tux.png')[1]\n```\n\nReturns the width and height of a given image.\n\nSee: [image-size](http://stylus-lang.com/docs/bifs.html#image-sizepath)\n","h2":null},{"title":"Caching","elms":"\n```stylus\nsize($width)\n  +cache('w' + $width)\n    width: $width\n.a { size: 10px }\n.b { size: 10px }\n```\n\n```stylus\n// yields: .a, b { width: 10px }\n```\n\nApplies its contents to the given selector on the first call, but would @extend the first call’s selector at the second call with the same params.\n\nSee: [cache](http://stylus-lang.com/docs/bifs.html#cachekeys)\n","h2":null},{"title":"Add Property","elms":"\n```stylus\ngradient(color)\n  add-property('background-image', linear-gradient(top, color, darken(color, 20%)))\n  color\n```\n\n```stylus\nbody\n  background: gradient(red)\n```\n\nSee: [add-property](http://stylus-lang.com/docs/bifs.html#add-propertyname-expr)\n","h2":null},{"title":"sprintf","elms":"\n```stylus\n'-webkit-gradient(%s, %s, %s)' % (linear (0 0) (0 100%))\n// → -webkit-gradient(linear, 0 0, 0 100%)\n```\n\n```stylus\ns(\"rgba(0, 0, 0, %s)\", 0.3)\n```\n\nSee: [s](http://stylus-lang.com/docs/bifs.html#sfmt-)\n","h2":null},{"title":"Embed URL","elms":"\n```\nbackground: embedurl('logo.png')\n// → background: url(\"data:image/png;base64,…\")\n```\n\nSee: [embedurl](http://stylus-lang.com/docs/bifs.html#embedurlpath-encoding)","h2":null}]}